/**
 * https://blog.csdn.net/kebi007/article/details/54882425 2017年前端面试题整理汇总100题 
 * 
 * 一 position各相对于什么定位
 *  1 absolute相对于定位不是static的父级元素
 *  2 relative相对于自身在普通文档流中的位置定位
 *  3 fixed相对于浏览器窗口
 *  4 static默认值，正常文档流
 *  5 sticky粘性定位
 * 
 * 二 解决跨域问题
 *  JSONP：动态插入script标签，通过script标签引入一个js文件，这个js文件载入成功后会执行我们在url参数中指定的函数，并且会把我们需要的json数据作为参数传入
 *  由于同源策略的限制，XmlHttpRequest只允许请求当前源（协议，域名，端口）的资源，为了实现跨域请求，可以通过script标签实现跨域请求，然后再服务器端输出
 *  JSON数据并执行回掉函数，从而解决了跨域的数据请求
 *  缺点是只支持GET
 *  
 * CORS：服务器端对于CORS的支持，主要就是通过设置Access-Control-Allow-Origin,
 *  
 * 三 TCP三次握手
 *  为了准备无误的将数据传送到目标处，TCP采用三次握手，TCP标志，SYN和ACK
 *  发送端首先发送一个带SYN标志的数据包给对方，接收端收到后，回传一个带有SYN/ACK标志的数据包以示确认信息，
 *  最后，发送端再回传一个带ACK标志的数据包，代表‘握手结束’
 *  
 *  TCP UDP的区别：
 *   TCP：是基于连接的，在正式收发数据之前，必须和对方建立一个可靠的链接，一个TCP连接必须要经过三次对话
 *   UDP：它是面向非连接的协议，不与对方建立连接，直接发送数据包，适用于一次只传输少量数据对可靠性要求不高的环境
 * 
 * 四 渐进增强和优雅降级
 *  渐进增强：针对低版本浏览器进行构建页面，保证最基本的功能，然后针对高版本的浏览器进行效果/交互等改进和追加功能达到 更好的体验效果
 *  优雅降级：开始的时候构建完整的功能，然后去兼容低版本的浏览器
 *  
 * 五 常见web安全及防护管理
 *  sql注入：通过SQL命令插入到web表单递交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令
 *   1 永远不要相信用户输入，对用户输入进行检查
 *   2 不要使用动态拼接SQL，
 *   3 数据库权限问题
 *   4 重要的文件加密
 * 
 *  XSS原理及防范
 *   XSS: 攻击者往web页面里插入恶意html标签或者javascript代码，
 *   防范：对用户输入的地方和变量都需要仔细检查特殊符号，避免cookie中暴露特殊信息，尽量采用POST
 *  
 * 六 WebSocket
 *  web应用程序的传输协议，提供了双向的按序到达的数据流。是一个HTML5协议，WebSocket的连接是持久的，通过在客户端和服务器之间保持双工连接，服务器的更新可以被及时
 *  推送到客户端，不需要客户端以一定的时间间隔去查询
 * 
 * 七 HTTP和HTTPS
 *  HTTP协议通常承载于TCP协议上，在HTTP和TCP之间添加一个安全协议层就成了HTTPS,默认的HTTP端口是80，HTTPS是443
 *  
 * 八 模块化
 *  AMD：RequireJS，提前执行
 *  CMD：SeaJS，延迟执行
 * 
 * 九 垃圾回收
 *  标记清除（mark and sweep）：最常见的垃圾回收方式，垃圾回收器标记变量进入环境还是离开环境，垃圾回收器会在运行的时候给存储在
 * 
 * 十 社么是Etag
 *  当发送一个服务器请求时，浏览器首先会进行缓存过期判断，浏览器根据缓存过期时间判断缓存文件是否过期
 *  1 若没有过期，则不向服务器发送请求，直接使用缓存中的结果，此时我们会看到200 ok，此时就是完全使用缓存，浏览器和服务器没有交互
 *  2 若已经过期，则向服务器发送请求，此时请求中会带上一步中设置的文件修改时间和Etag
 *   2-1 资源更新判断，服务器根据传过来的文件修改时间，判断自浏览器上一次请求之后文件是不是没有被修改过，如果没有被修改则使用缓存中的文件此时状态码304Not Modified
 *   2-2 若修改时间和文件内容判断有一个没有通过，则服务器重新返回文件
 * 
 * 十一 栈和队列的区别？
 *  栈的插入和删除操作都是在一端进行的，队的操作是两端
 *  队列先进先出，栈先进后出
 *  栈只允许在表尾进行插入和删除，队列在尾部插入，头部删除
 * 
 * 十二 堆和栈的区别
 *  1 栈：由编译器分配释放，存放函数的参数值，局部变量的值
 *  2 堆：由程序员分配释放，若程序员不释放，程序结束时可能有OS释放
 */